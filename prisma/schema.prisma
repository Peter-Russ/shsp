generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  userName          String 
  email             String @unique 
  emailVerified     Boolean @default(false)
  image             String? 
  password          String
  blocked           Boolean @default(false)
  subscribers       String[] @default([]) @db.ObjectId
  subscribersUsers  String[] @default([]) @db.ObjectId
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt 

  videoIds          Video[] 
  commentIds        Comments[]
}

model Video {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String? @default("")
  tags            String[] @default([])
  description     String? @default("")
  image           String?
  likedIds        String[] @db.ObjectId   
  dislikedIds     String[] @db.ObjectId    
  blocked         Boolean @default(false)
  uploadedAt      DateTime @default(now())
  updatedAt       DateTime @updatedAt
  views           Int @default(0)

  userId          String @db.ObjectId
  user            User @relation(fields: [userId], references: [id], onDelete: Cascade)
  commentIds      Comments[]
}


model Comments {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  text            String 
  createdAt       DateTime @default(now())
  
  videoId         String @db.ObjectId
  video           Video @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String @db.ObjectId
  user            User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  views           Int @default(0)
}